/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.9.1-snapshot-20091015 on Mon Mar 22 01:05:19 2010
 */

#include "sipAPIpy_sems_lib.h"

#line 117 "PySemsB2ABDialog.sip"
#include "../PySemsB2ABDialog.h"
#line 12 "sippy_sems_libPySemsB2ABEvent.cpp"



/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_PySemsB2ABEvent(void *, const sipTypeDef *);}
static void *cast_PySemsB2ABEvent(void *ptr, const sipTypeDef *targetType)
{
    if (targetType == sipType_PySemsB2ABEvent)
        return ptr;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_PySemsB2ABEvent(void *, int);}
static void release_PySemsB2ABEvent(void *sipCppV,int)
{
    delete reinterpret_cast<PySemsB2ABEvent *>(sipCppV);
}


extern "C" {static void dealloc_PySemsB2ABEvent(sipSimpleWrapper *);}
static void dealloc_PySemsB2ABEvent(sipSimpleWrapper *sipSelf)
{
    sipTrace(SIP_TRACE_DEALLOCS,"dealloc_PySemsB2ABEvent()\n");

    if (sipIsPyOwned(sipSelf))
    {
        release_PySemsB2ABEvent(sipSelf->u.cppPtr,0);
    }
}


extern "C" {static void *init_PySemsB2ABEvent(sipSimpleWrapper *, PyObject *, PyObject **, int *);}
static void *init_PySemsB2ABEvent(sipSimpleWrapper *, PyObject *sipArgs, PyObject **, int *sipArgsParsed)
{
    PySemsB2ABEvent *sipCpp = 0;

    sipTrace(SIP_TRACE_INITS,"init_PySemsB2ABEvent()\n");

    if (!sipCpp)
    {
        int a0;

        if (sipParseArgs(sipArgsParsed,sipArgs,"i",&a0))
        {
            sipCpp = new PySemsB2ABEvent(a0);
        }
    }

    if (!sipCpp)
    {
        const PySemsB2ABEvent * a0;

        if (sipParseArgs(sipArgsParsed,sipArgs,"J9",sipType_PySemsB2ABEvent,&a0))
        {
            sipCpp = new PySemsB2ABEvent(*a0);
        }
    }

    return sipCpp;
}


sipClassTypeDef sipTypeDef_py_sems_lib_PySemsB2ABEvent = {
    {
        -1,
        0,
        0,
        SIP_TYPE_CLASS,
        sipNameNr_PySemsB2ABEvent,
        {0}
    },
    {
        sipNameNr_PySemsB2ABEvent,
        {0, 0, 1},
        0, 0,
        0, 0,
        0, 0,
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    },
    -1,
    -1,
    0,
    0,
    init_PySemsB2ABEvent,
    0,
    0,
#if PY_MAJOR_VERSION >= 3
    0,
    0,
#else
    0,
    0,
    0,
    0,
#endif
    dealloc_PySemsB2ABEvent,
    0,
    0,
    0,
    release_PySemsB2ABEvent,
    cast_PySemsB2ABEvent,
    0,
    0,
    0
};
