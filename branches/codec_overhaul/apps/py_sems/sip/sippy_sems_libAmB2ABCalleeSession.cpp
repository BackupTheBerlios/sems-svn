/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.5.2 (4.5.2) on Mon Feb 18 16:33:22 2008
 */

#include "sipAPIpy_sems_lib.h"
#include "sippy_sems_libAmB2ABCalleeSession.h"

#include "sippy_sems_libstring.h"
#include "sippy_sems_libAmB2ABCalleeSession.h"
#include "sippy_sems_libAmAudioFile.h"



extern "C" {static PyObject *meth_AmB2ABCalleeSession_connectSession(PyObject *, PyObject *);}
static PyObject *meth_AmB2ABCalleeSession_connectSession(PyObject *sipSelf,PyObject *sipArgs)
{
    sipTrace(SIP_TRACE_METHODS,"meth_AmB2ABCalleeSession_connectSession()\n");

    int sipArgsParsed = 0;

    {
        AmB2ABCalleeSession *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipClass_AmB2ABCalleeSession,&sipCpp))
        {
            sipCpp->connectSession();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipNm_py_sems_lib_AmB2ABCalleeSession,sipNm_py_sems_lib_connectSession);

    return NULL;
}


extern "C" {static PyObject *meth_AmB2ABCalleeSession_disconnectSession(PyObject *, PyObject *);}
static PyObject *meth_AmB2ABCalleeSession_disconnectSession(PyObject *sipSelf,PyObject *sipArgs)
{
    sipTrace(SIP_TRACE_METHODS,"meth_AmB2ABCalleeSession_disconnectSession()\n");

    int sipArgsParsed = 0;

    {
        AmB2ABCalleeSession *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"B",&sipSelf,sipClass_AmB2ABCalleeSession,&sipCpp))
        {
            sipCpp->disconnectSession();

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipNm_py_sems_lib_AmB2ABCalleeSession,sipNm_py_sems_lib_disconnectSession);

    return NULL;
}


extern "C" {static PyObject *meth_AmB2ABCalleeSession_setInput(PyObject *, PyObject *);}
static PyObject *meth_AmB2ABCalleeSession_setInput(PyObject *sipSelf,PyObject *sipArgs)
{
    sipTrace(SIP_TRACE_METHODS,"meth_AmB2ABCalleeSession_setInput()\n");

    int sipArgsParsed = 0;

    {
        AmAudioFile * a0;
        AmB2ABCalleeSession *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ@",&sipSelf,sipClass_AmB2ABCalleeSession,&sipCpp,sipClass_AmAudioFile,&a0))
        {
            sipCpp->setInput(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipNm_py_sems_lib_AmB2ABCalleeSession,sipNm_py_sems_lib_setInput);

    return NULL;
}


extern "C" {static PyObject *meth_AmB2ABCalleeSession_setOutput(PyObject *, PyObject *);}
static PyObject *meth_AmB2ABCalleeSession_setOutput(PyObject *sipSelf,PyObject *sipArgs)
{
    sipTrace(SIP_TRACE_METHODS,"meth_AmB2ABCalleeSession_setOutput()\n");

    int sipArgsParsed = 0;

    {
        AmAudioFile * a0;
        AmB2ABCalleeSession *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ@",&sipSelf,sipClass_AmB2ABCalleeSession,&sipCpp,sipClass_AmAudioFile,&a0))
        {
            sipCpp->setOutput(a0);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipNm_py_sems_lib_AmB2ABCalleeSession,sipNm_py_sems_lib_setOutput);

    return NULL;
}


extern "C" {static PyObject *meth_AmB2ABCalleeSession_setInOut(PyObject *, PyObject *);}
static PyObject *meth_AmB2ABCalleeSession_setInOut(PyObject *sipSelf,PyObject *sipArgs)
{
    sipTrace(SIP_TRACE_METHODS,"meth_AmB2ABCalleeSession_setInOut()\n");

    int sipArgsParsed = 0;

    {
        AmAudioFile * a0;
        AmAudioFile * a1;
        AmB2ABCalleeSession *sipCpp;

        if (sipParseArgs(&sipArgsParsed,sipArgs,"BJ@J@",&sipSelf,sipClass_AmB2ABCalleeSession,&sipCpp,sipClass_AmAudioFile,&a0,sipClass_AmAudioFile,&a1))
        {
            sipCpp->setInOut(a0,a1);

            Py_INCREF(Py_None);
            return Py_None;
        }
    }

    /* Raise an exception if the arguments couldn't be parsed. */
    sipNoMethod(sipArgsParsed,sipNm_py_sems_lib_AmB2ABCalleeSession,sipNm_py_sems_lib_setInOut);

    return NULL;
}


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
extern "C" {static void *cast_AmB2ABCalleeSession(void *, sipWrapperType *);}
static void *cast_AmB2ABCalleeSession(void *ptr,sipWrapperType *targetClass)
{
    if (targetClass == sipClass_AmB2ABCalleeSession)
        return ptr;

    return NULL;
}


/* Call the instance's destructor. */
extern "C" {static void release_AmB2ABCalleeSession(void *, int);}
static void release_AmB2ABCalleeSession(void *ptr,int)
{
    delete reinterpret_cast<AmB2ABCalleeSession *>(ptr);
}


extern "C" {static void dealloc_AmB2ABCalleeSession(sipWrapper *);}
static void dealloc_AmB2ABCalleeSession(sipWrapper *sipSelf)
{
    sipTrace(SIP_TRACE_DEALLOCS,"dealloc_AmB2ABCalleeSession()\n");

    if (sipIsPyOwned(sipSelf))
    {
        release_AmB2ABCalleeSession(sipSelf->u.cppPtr,0);
    }
}


extern "C" {static void *init_AmB2ABCalleeSession(sipWrapper *, PyObject *, sipWrapper **, int *);}
static void *init_AmB2ABCalleeSession(sipWrapper *,PyObject *sipArgs,sipWrapper **,int *sipArgsParsed)
{
    AmB2ABCalleeSession *sipCpp = 0;

    sipTrace(SIP_TRACE_INITS,"init_AmB2ABCalleeSession()\n");

    if (!sipCpp)
    {
        const string * a0;
        int a0State = 0;

        if (sipParseArgs(sipArgsParsed,sipArgs,"M1",sipMappedType_string,&a0,&a0State))
        {
            sipCpp = new AmB2ABCalleeSession(*a0);

            sipReleaseMappedType(const_cast<string *>(a0),sipMappedType_string,a0State);
        }
    }

    return sipCpp;
}


extern "C" {static void *forceConvertTo_AmB2ABCalleeSession(PyObject *, int *);}
static void *forceConvertTo_AmB2ABCalleeSession(PyObject *valobj,int *iserrp)
{
    if (*iserrp || valobj == NULL)
        return NULL;

    if (valobj == Py_None || sipIsSubClassInstance(valobj,sipClass_AmB2ABCalleeSession))
        return sipConvertToCpp(valobj,sipClass_AmB2ABCalleeSession,iserrp);

    sipBadClass(sipNm_py_sems_lib_AmB2ABCalleeSession);

    *iserrp = 1;

    return NULL;
}


static PyMethodDef methods_AmB2ABCalleeSession[] = {
    {sipNm_py_sems_lib_connectSession, meth_AmB2ABCalleeSession_connectSession, METH_VARARGS, NULL},
    {sipNm_py_sems_lib_disconnectSession, meth_AmB2ABCalleeSession_disconnectSession, METH_VARARGS, NULL},
    {sipNm_py_sems_lib_setInOut, meth_AmB2ABCalleeSession_setInOut, METH_VARARGS, NULL},
    {sipNm_py_sems_lib_setInput, meth_AmB2ABCalleeSession_setInput, METH_VARARGS, NULL},
    {sipNm_py_sems_lib_setOutput, meth_AmB2ABCalleeSession_setOutput, METH_VARARGS, NULL}
};


sipTypeDef sipType_py_sems_lib_AmB2ABCalleeSession = {
    0,
    0,
    "py_sems_lib.AmB2ABCalleeSession",
    0,
    {0, 0, 1},
    0,
    0,
    5, methods_AmB2ABCalleeSession,
    0, 0,
    0,
    init_AmB2ABCalleeSession,
    0,
    0,
    0,
    0,
    0,
    0,
    dealloc_AmB2ABCalleeSession,
    cast_AmB2ABCalleeSession,
    release_AmB2ABCalleeSession,
    forceConvertTo_AmB2ABCalleeSession,
    0,
    0,
    {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    0
};
