#
# $Id: ser_for_ivr.cfg,v 1.1.8.1 2005/09/02 13:47:47 rco Exp $
#
# this script is configured for use as voicemail UAS; it processes
# INVITEs and BYEs and asks SEMS to record media via "vm"; in this
# script, all record-routing and other constructs known from proxy
# scripts are not present  -- it is a simple UAS 
#

# ----------- global configuration parameters ------------------------

debug=9	        # debug level (cmd line: -dddddddddd)
#fork=yes
log_stderror=yes 	# (cmd line: -E)


check_via=no		# (cmd. line: -v)
dns=no			# (cmd. line: -r)
rev_dns=no		# (cmd. line: -R)
port=5060
children=4
fifo="/tmp/ser_fifo"
listen=195.37.78.184

# ------------------ module loading ----------------------------------

loadmodule "modules/sl/sl.so"
loadmodule "modules/tm/tm.so"
loadmodule "modules/rr/rr.so"
loadmodule "modules/maxfwd/maxfwd.so"
loadmodule "modules/usrloc/usrloc.so"
loadmodule "modules/registrar/registrar.so"
loadmodule "modules/vm/vm.so"
loadmodule "modules/dbtext/dbtext.so"


# ----------------- setting module-specific parameters ---------------

# You may want to define things like databases here. Please refer to
# the extensive SER documentation for this purpose. Module parameters
# are always described in the modules README files.
#
# For pure ivr functionality only a database is needed, we use
# a simple textfile for this purpose. Actually this is only neccessary until
# the vm module is reworked. Simply copy the etc/db directory from the ivr
# directory somewhere and specify it in the following statement:

modparam("voicemail", "db_url","/home/ilk/sip_router/modules/vm/db")

# -------------------------  request routing logic -------------------

# main routing logic

route{


	# initial sanity checks -- messages with
	# max_forwars==0, or excessively long requests
	if (!mf_process_maxfwd_header("10")) {
		sl_send_reply("483","Too Many Hops");
		break;
	};
	if (msg:len >= max_len ) {
		sl_send_reply("513", "Message too big");
		break;
	};
   
	if (!uri==myself) {
		sl_send_reply("404", "not reponsible for host in r-uri");
		break;
	};

   if (method=="REGISTER") {

# Uncomment this if you want to use digest authentication
#			if (!www_authorize("iptel.org", "subscriber")) {
#				www_challenge("iptel.org", "0");
#				break;
#			};

			save("location");
			break;
	};


	# ivr specific configuration - begin

	if(method=="ACK" || method=="INVITE" || method=="BYE"){

		if (!t_newtran()) {
			log("could not create new transaction\n");
			sl_send_reply("500","could not create new transaction");
			break;
		};

		t_reply("100","Trying -- just wait a minute !");
		if(method=="INVITE"){
			log("**************** vm start - begin ******************\n");
			if (uri=~"sip:ivr@.*") {
		      if (!vm("/tmp/am_fifo", "ivr")) {
               log("couldn't contact ivr server\n");
					t_reply("500", "couldn not contact ivr server");
				};
			};
			log("**************** vm start - end ******************\n");
		} else if(method=="BYE"){
			log("**************** vm end - begin ******************\n");
			if(!vm("/tmp/am_fifo","bye")){
				log("could not contact ivr\n");
				t_reply("500","could not contact ivr");
			};
			log("**************** vm end - end ******************\n");
		};
		break;
	};
	if (method=="CANCEL") {
		sl_send_reply("200", "cancels are junked here");
		break;
	};
	sl_send_reply("501", "method not understood here");
}
