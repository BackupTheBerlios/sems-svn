/*
 * Interface wrapper code.
 *
 * Generated by SIP 4.1.1 (4.1.1-255) on Mon Feb 19 14:57:35 2007
 */

#include "sipAPIpy_sems_lib.h"
#include "sippy_sems_libAmAudioEvent.h"

sipAmAudioEvent::sipAmAudioEvent(int a0): AmAudioEvent(a0), sipPySelf(0)
{
	sipCommonCtor(NULL,0);
}

sipAmAudioEvent::sipAmAudioEvent(const AmAudioEvent& a0): AmAudioEvent(a0), sipPySelf(0)
{
	sipCommonCtor(NULL,0);
}

sipAmAudioEvent::~sipAmAudioEvent()
{
	sipCommonDtor(sipPySelf);
}


/* Cast a pointer to a type somewhere in its superclass hierarchy. */
static void *cast_AmAudioEvent(void *ptr,sipWrapperType *targetClass)
{
	void *res;

	if (targetClass == sipClass_AmAudioEvent)
		return ptr;

	if ((res = sipCast_AmEvent((AmEvent *)(AmAudioEvent *)ptr,targetClass)) != NULL)
		return res;

	return NULL;
}


static void dealloc_AmAudioEvent(sipWrapper *sipSelf)
{
	if (!sipIsSimple(sipSelf))
		reinterpret_cast<sipAmAudioEvent *>(sipSelf -> u.cppPtr) -> sipPySelf = NULL;

	if (sipIsPyOwned(sipSelf))
	{
		if (!sipIsSimple(sipSelf))
			delete reinterpret_cast<sipAmAudioEvent *>(sipSelf -> u.cppPtr);
		else
			delete reinterpret_cast<AmAudioEvent *>(sipSelf -> u.cppPtr);
	}
}


static void *init_AmAudioEvent(sipWrapper *sipSelf,PyObject *sipArgs,int *)
{
	int sipArgsParsed = 0;
	sipAmAudioEvent *sipCpp = 0;

	if (!sipCpp)
	{
		int a0;

		if (sipParseArgs(&sipArgsParsed,sipArgs,"i",&a0))
		{
			sipCpp = new sipAmAudioEvent(a0);
		}
	}

	if (!sipCpp)
	{
		const AmAudioEvent * a0;

		if (sipParseArgs(&sipArgsParsed,sipArgs,"J1",sipClass_AmAudioEvent,&a0))
		{
			sipCpp = new sipAmAudioEvent(*a0);
		}
	}

	if (!sipCpp)
	{
		sipNoCtor(sipArgsParsed,sipNm_py_sems_lib_AmAudioEvent);
		return 0;
	}

	sipCpp -> sipPySelf = sipSelf;

	return sipCpp;
}


static void *forceConvertTo_AmAudioEvent(PyObject *valobj,int *iserrp)
{
	if (*iserrp || valobj == NULL)
		return NULL;

	if (valobj == Py_None || sipIsSubClassInstance(valobj,sipClass_AmAudioEvent))
		return sipConvertToCpp(valobj,sipClass_AmAudioEvent,iserrp);

	sipBadClass(sipNm_py_sems_lib_AmAudioEvent);

	*iserrp = 1;

	return NULL;
}


/* Define this type's super-types. */
static sipSuperClassDef supers_AmAudioEvent[] = {{2, 255, 1}};

static sipEnumValueInstanceDef enums_AmAudioEvent[] = {
	{sipNm_py_sems_lib_cleared, AmAudioEvent::cleared},
	{sipNm_py_sems_lib_noAudio, AmAudioEvent::noAudio}
};


/* The main type data structure. */
sipTypeDef sipType_AmAudioEvent = {
	0,
	"py_sems_lib.AmAudioEvent",
	-1,
	supers_AmAudioEvent,
	0,
	0, 0,
	2, enums_AmAudioEvent,
	0,
	init_AmAudioEvent,
	dealloc_AmAudioEvent,
	cast_AmAudioEvent,
	forceConvertTo_AmAudioEvent,
	0,
	0,
	0,
	{0, 0, 0, 0, 0, 0}
};
