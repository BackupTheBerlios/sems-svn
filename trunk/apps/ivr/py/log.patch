Index: log.py
===================================================================
--- log.py	(.../branches/inter_plugin_com/apps/ivr/py/log.py)	(revision 22559)
+++ log.py	(.../trunk/apps/ivr/py/log.py)	(revision 21770)
@@ -1,52 +1,35 @@
 import ivr
-import sys,logging
+import sys
 
-from com.iptel.log.Logger import *
-
 # These are the same as in log.h
 L_ERR  = 0
 L_WARN = 1
 L_INFO = 2
 L_DBG  = 3
 
-def fromPyLogLevel(py_level):
+def log(level, msg, args):
 
-	level = 0
-	if py_level >= logging.ERROR:
-		level = L_ERR
-	elif py_level >= logging.WARN:
-		level = L_WARN
-	elif py_level >= logging.INFO:
-		level = L_INFO
+	if args != None:
+		tmp_msg = msg % args
 	else:
-		level = L_DBG
+		tmp_msg = msg
+		
+	ivr.log(level,"Ivr-Python: " + tmp_msg + "\n")
 
-	return level
-	
 
-def toPyLogLevel(level):
+def error(msg, args=None):
+	log(L_ERR, msg, args)
 
-	py_level = 0
-	if level >= L_DBG:
-		py_level = logging.DEBUG
-	elif level >= L_INFO:
-		py_level = logging.INFO
-	elif level >= L_WARN:
-		py_level = logging.WARN
-	else:
-		py_level = logging.ERROR
+def warn(msg, args=None):
+	log(L_WARN, msg, args)
 
-	return py_level
+def info(msg, args=None):
+	log(L_INFO, msg, args)
+	
+def debug(msg, args=None):
+	log(L_DBG, msg, args)
 
 
-class SemsLogHandler(logging.Handler):
-
-	def emit(self, record):
-
-		msg = self.format(record)
-		ivr.log(fromPyLogLevel(record.levelno),msg + '\n')
-
-
 def stacktrace(tb):
 
 	if tb: last_file = stacktrace(tb.tb_next)
@@ -72,9 +55,5 @@
 
 
 # init code
-if not hasattr(Logger,"logger"):
-	initLogger("sems",toPyLogLevel(ivr.SEMS_LOG_LEVEL))
-	getLogger().addLogHandler(SemsLogHandler())
-
 sys.excepthook = log_excepthook
 debug("Python-Ivr logging started")
