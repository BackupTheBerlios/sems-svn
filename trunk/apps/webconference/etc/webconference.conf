
# configure the various announcements here
first_participant=/usr/local/lib/sems/audio/webconference/first_participant.wav
join_sound=/usr/local/lib/sems/audio/webconference/beep.wav
drop_sound=/usr/local/lib/sems/audio/webconference/beep.wav
enter_pin=/usr/local/lib/sems/audio/webconference/pin_prompt.wav
wrong_pin=/usr/local/lib/sems/audio/webconference/wrong_pin.wav
entering_conference=/usr/local/lib/sems/audio/webconference/entering_conference.wav

#
# Say the PIN after entry?
# Possible values: 'yes'/'no'
#
tell_pin=yes

# digits to play the room number 
# must contain the files 0.wav, 1.wav, ...,  9.wav
digits_dir=/usr/local/lib/sems/audio/webconference/

#
# Use * key instead of # to finish PIN entry?
#
star_finishes_pin=yes

#
# direct_room_re specifies a regexp which, if matched on 
# the user of an incoming call, connects the caller directly to
# the conference room, without asking for the PIN. 
# 
direct_room_re=00077*
#
# direct_room_strip specifies the number of digits to strip 
# from the user part of the request uri to get the conference
# room number on direct room dial in.
# e.g. direct_room_strip=5, called 00077123 => room 123
direct_room_strip=5

#
# master_password sets optionally a master password which can be used to
# retreive a room's password with the getRoomPassword function
#
# master_password=verysecret

#
#
# feedback and statistics
feedback_file=/var/log/sems-webconference-feedback.txt

stats_dir=/var/log/sems-webconference/

#
# if set, this URL will be added to SDP (u line), so clever user agents 
# can display the conference control page right away.
#
# (room number and admin pin is embedded into the URL)
# 
#webconference_urlbase=https://webconference.iptel.org/openRoom.py?action=openRoom

