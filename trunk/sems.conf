# $Id: sems.conf.sample,v 1.21 2005/01/05 16:48:04 sayer Exp $
#
# sems.conf.sample
#
# Sip Express Media Server (sems)
# 
# sample configuration file
# 
#
# whitespaces (spaces and tabs) are ignored
# comments start with a "#" and may be used inline
# 
# example: option=value1, value2  # i like this option
#

##################################
# global parameters              #
##################################

# optional parameter: fork={yes|no}
# 
# - specifies if sems should run in daemon mode (background)
#   (fork=no is the same as -E)
fork=no

# optional parameter: stderr={yes|no}
#
# - debug mode: do not fork and log to stderr
#   (stderr=yes is the same as -E)
stderr=yes

# optional parameter: loglevel={0|1|2|3}
#
# - sets log level (error=0, warning=1, info=2, debug=3)
#   (same as -D)
loglevel=3

# optional parameter: fifo_name=<filename>
#
# - path and file name of our fifo file (same as -i)
#fifo_name=/tmp/am_fifo

# optional parameter: ser_fifo_name=<filename>
#
# - path and file name of Ser's fifo file (same as -o)
#ser_fifo_name=/tmp/ser_fifo

# optional parameter: socket_name=<filename>
#
# - path and file name of our unix socket
socket_name=/tmp/sems_sock

# optional parameter: ser_socket_name=<filename>
#
# - path and file name of Ser's unix socket
ser_socket_name=/tmp/ser_sock

# optional parameter: send_method=<filename>
#
# - sets which method will be used to contact Ser:
#   FIFO or unix socket server.
# - values: fifo (default), unix_socket
#
# - PLEASE NOTE THAT: if you use 'fifo', make sure that
#   fifo_name and ser_fifo_name have been set. if you use 'unix_socket',
#   make sure that socket_name and ser_socket_name have been set.
# 
send_method=unix_socket

# optional parameter: plugin_path=<path>
# 
# - sets the path to the plug-ins
# - may be absolute or relative to CWD
plugin_path=lib

# optional parameter: smtp_server=<hostname>
#
# - sets address of smtp server
smtp_server=localhost

# optional parameter: smtp_port=<port>
#
# - sets port of smtp server
smtp_port=25

# optional parameter: rtp_low_port=<port>
#
# - sets port of rtp lowest server
#rtp_low_port=1024

# optional parameter: rtp_high_port=<port>
#
# - sets port of rtp highest server
#rtp_high_port=65535

##################################
# module specific parameters     #
##################################

# sample voicemail configuration (inline)
config.voicemail=inline

# optional parameter: rec_file_extension=<ext>
# 
# - sets the file extension which will be used
#   to record messages.
# - example 1: wav
# - example 2: mp3
#
# WARNING: you must compile the mp3 plug-in
#          in order to use 'mp3' as default
#          extension. You will need the lame
#          encoder for that.
#          See plug-in/mp3/ReadmeMP3.txt for
#          more information.
#
rec_file_extension=wav

# optional parameter: announce_path=<path>
# 
# - sets the path where announce files are searched for
# - the file to be played is searched in the following order:
#   <announce_path>/<domainname>/<username>.wav
#   <announce_path>/<domainname>/<language>/<default_announce>
#   <announce_path>/<domainname>/<default_announce>
#   <announce_path>/<language>/<default_announce>
#   <announce_path>/<default_announce>
#   where <language> is taken from the body of P-Language header
#   of the request (if any).
announce_path=wav/

# parameter: default_announce=<filename>
# 
# - sets the name of the default announce WAV file
default_announce=default_en.wav

# parameter: max_record_time=<seconds>
#
# - maximum record time
max_record_time=10

# parameter: accept_delay=<x>
# 
# - delays accepting of the call for x seconds
# - default value is 0
accept_delay=0

# parameter: email_template_path=<filename>
#
# - email templates path
# 
# See the README file in <sems-src>/plug-in/voicemail
# for more information on the syntax used.
# - template to be used is selected in the following order:
#   <email_template_path><domain>_<language>.template
#   <email_template_path><domain>.template
#   <email_template_path>default_<language>.template
#   <email_template_path>default.template
#   where <language> is taken from the body of P-Language header
# of the request (if any).
#
email_template_path=plug-in/voicemail

# end of configuration section for voicemail module
config.voicemail=end


# sample announcement configuration (inline)
config.announcement=inline

# optional parameter: announce_path=<path>
# 
# - sets the path where announce files are searched for
announce_path=wav/

# parameter: default_announce=<filename>
# 
# - sets the name of the default announce WAV file
default_announce=default_en.wav

# end of configuration section for announcement module
config.announcement=end


# sample isdngw module configuration (external file)
# config.isdngw=/etc/isdngw.conf

# sample ivr module configuration (inline)
config.ivr=inline
#
#
# The IVR checks for a script with the name of the callee
# (<local part in r-uri>.py for python, <local part in r-uri>.pl for perl)
# in the directory <ivr_script_path><domain>, then for 
# <ivr_script_path><domain><ivr_script_file>. If this is  not found,
# <ivr_script_path>/<local part in r-uri>.py if searched, 
# and if this is not found, <ivr_script_path>/<ivr_script_file> is used.
#
# So with a call to sayer@iptel.org and
#ivr_script_path=/etc/ivr and 
#ivr_script_file=ivr.py
# these files are checked:
#/etc/ivr/iptel.org/sayer.py
#/etc/ivr/iptel.org/ivr.py
#/etc/ivr/sayer.py
#/etc/ivr/ivr.py
#
  #parameter: ivr_script_path:
  # path to ivr scripts.
  # 
  script_path=/home/rco/src/iptelsvn/scratch/rco/sems/new_audio/plug-in/ivr/scripts
  # default script file: this will be executed if <user>.py does not exist.
  #
  default_script=test.py

  # parameter : tts_caching
  # 	y or n
  #       text will be read from waves already synthesized and 
  #	cached in cache_path 
  tts_caching=y

  # parameter : tts_cache_path
  # 	path to cache waves
  # 	path must exist! 
  tts_cache_path=/tmp/wavs
# end of configuration section for ivr module
config.ivr=end

# sample conference configuration (inline)
config.conference=inline

# parameter: default_announce=<filename>
#
# - sets the full pathed name of the default announce WAV file.
#   Will be played to lonely users.
default_announce=/usr/local/lib/sems/audio/first_participant.wav

# end of configuration section for conference module
config.conference=end

# example configuration for number reader
config.number_reader=inline

number_path=/usr/local/lib/sems/audio/

prolog_file=welcome_to_number_reader.wav

epilog_file=thanks_calling_number_reader.wav

# end of number_reader configuration
config.number_reader=end

# add more module configurations here (inline or external):
#
# config.mymodule=<filename>
#  or
# config.mymodule=inline
# ...
# config.mymodule=end

config.dtmfdemo=inline

audio_path=wav/

config.dtmfdemo=end
