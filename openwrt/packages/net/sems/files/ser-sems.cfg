# ser for sems configuration
port=5060
unix_sock="/tmp/ser_sock"
server_signature=0
children=2

loadmodule "/lib/ser/modules/sl.so"
loadmodule "/lib/ser/modules/tm.so"
modparam("tm", "pass_provisional_replies", 1)
modparam("tm", "tw_append",
        "app_headers:hdr[P-App-Name];hdr[P-App-Param]")
modparam( "tm", "tw_append",
   "dtmf_info:hdr[Content-Length];hdr[Content-Type];msg[body]")

# main routing logic
route{
        # make transaction
        if (!t_newtran()){
                sl_send_reply("500","could not create transaction");
                break;
        }

        # actively absorb ACKs
        if (method == "ACK") {
                t_relay();
                break;
        }

        # pass everything to SEMS
        if (method=="INVITE") {
                if(!t_write_unix("/tmp/sems_sock","sems/app_headers")){
                        log("could not contact sems\n");
                        t_reply("500","could not contact media server");
                }
        } else if (method=="INFO") {
                if(!t_write_unix("/tmp/sems_sock","sems/dtmf_info")){
                        log("could not contact sems\n");
                        t_reply("500","could not contact media server");
                }
        } else { 
                if(!t_write_unix("/tmp/sems_sock","sems")){
                        log("could not contact sems\n");
                        t_reply("500","could not contact media server");
                }
        }
}
